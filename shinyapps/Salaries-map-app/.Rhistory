mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR|\\[")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR|\\]|\\[")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "]|PB|SB|FR|NR|AR|MR||\\[")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR||\\[|]")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR||\\[")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR|\\[")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR|\\]")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\[PB|SB|FR|NR|AR|MR|\\]")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\[|PB|SB|FR|NR|AR|MR|\\]")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\]|\\[|PB|SB|FR|NR|AR|MR|")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\]|\\[|PB|SB|FR|NR|AR|MR")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "]|\\[|PB|SB|FR|NR|AR|MR")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\[|PB|SB|FR|NR|AR|MR")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\[|PB|SB|FR|NR|AR|MR")
numbers <- str_remove(numbers, "\\]")
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "\\[|PB|SB|FR|NR|AR|MR")
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR")
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "PB|SB|FR|NR|AR|MR|\\[")
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[")
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[")
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
unlist(numbers)
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
numbers
#cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
new_cols
cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
#cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
results <- as.data.frame(do.call(rbind, numbers))
results
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
results <- as.data.frame(do.call(rbind, numbers))
colnames(results) <- cols_to_add
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- sprint_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
results <- as.data.frame(do.call(rbind, numbers))
colnames(results) <- cols_to_add
results
#sprint_pdf
#competitor_list(sprint_pdf)
remove <- c("\n\\s*", "#\\s*(?=\\d{1,4})[0-9]*", "\\$", "Q|q", "=", "SB", "PB")
results <- throws_pdf %>%
str_remove_all(paste0(remove, collapse="|"))
results <-  results[str_starts(results, "[0-9]{1,2}\\s+[A-Z]{1,}") | str_detect(results, "Name")]
new_cols <- unlist(str_split(results[1], "\\s+"))
event_results <- results[-1]
event_results <- tibble(event_results) %>%
mutate(event_results = str_replace(event_results, "^[0-9]{1,2}\\s*", " "))  %>%
mutate(Tiebreak = str_extract(event_results, "[0-9]{1,2}\\.[0-9]{3}")) %>%    # Create a new column for when they need thousandths to determine placing
mutate(event_results = str_trim(str_replace(event_results, "([0-9]{1,2}\\.[0-9]{3})", " ")))  %>%   # Remove the "tiebreak" from the original row / cell
mutate(event_results = str_replace(event_results, "\\s([0-9]|X)", "@\\1")) %>%     # Insert a separator between the text and the numbers
separate(event_results, into = c("Words", "Numbers"), sep = "@")
numbers <- str_extract_all(event_results$Numbers, "[0-9].*|X")  # Split the block of numbers into individual numbers
numbers <- str_remove(numbers, "FR|\\[") # Remove result markers that we didn't want to take our earlier, like "FR" as well as any unusual symbols
numbers <- trimws(str_remove(numbers, "\\]")) #could not figure out how to escape out both [ and ] in a single regex, even with \\ and |
numbers <- str_split(numbers, "\\s+")
cols_to_countback <- length(numbers[[3]])    # The number of numerical values in the results - some will have seed times and some won't, some will have heat # and some won't, etc
cols_to_add <- tail(new_cols, cols_to_countback)  # How many of the columns we'll need for the number of numerical values
results <- as.data.frame(do.call(rbind, numbers))
colnames(results) <- cols_to_add
results
jump_pdf <- read_results("https://flashresults.com/2019_Meets/Outdoor/05-09_ACC/015-1.pdf")
jump_pdf
